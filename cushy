#!/bin/bash
set -e # Abort on errors

function show_help() {
cat << EOF
Usage: ${0##*/} [-c CURL_ARGS] [-e EDITOR] [-s SHELL] URL
Download URL, display it in EDITOR, and then, after prompting, execute it with SHELL

If editor flag not set, uses $EDITOR, otherwise defaults to vi
EOF
}

# Possible command line arguments (do argument parsing later)
CURL_ARGS=""
SHELL='sh'
EDITOR=${EDITOR:-vi}
RESOURCE=""

function parse_args() {
	# A POSIX variable
	# Reset in case getopts has been used previously in the shell.
	OPTIND=1

	# Initialize our own variables:
	output_file=""
	verbose=0

	while getopts "h?cse:" opt; do
		case "$opt" in
		h|\?)
			show_help
			exit 0
			;;
		c)
			CURL_ARGS=$OPTARG
			;;
		s)
			SHELL=$OPTARG
			;;
		e)
			EDITOR=$OPTARG
			;;
		esac
	done

	shift $((OPTIND-1))

	[ "$1" = "--" ] && shift

	RESOURCE="$1"
}

function run_cushy() {
	# Create a temporary directory
	CUSHY_TEMP=`mktemp -d 2>/dev/null || mktemp -d -t 'cushy_tmpdir'`
	function clean_up() {
		rm -r "$CUSHY_TEMP"
		exit
	}
	trap clean_up EXIT

	# Download the file and write to it
	FILENAME="$CUSHY_TEMP/$(basename $RESOURCE)"
	curl $CURL_ARGS "$RESOURCE" > "$FILENAME"

	# Run the editor
	$EDITOR "$FILENAME"

	# Ask if we should install
	read -p "Are you sure you want to install this software? (y/n) " -r
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		# Run the program
		$SHELL "$FILENAME"
	fi
}

parse_args "$@"
run_cushy
